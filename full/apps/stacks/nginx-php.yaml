# PersistentVolumeClaim for storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

# Job for initializing storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-storage
spec:
  template:
    spec:
      containers:
      - name: init-container
        image: alpine/git
        command: ["/bin/sh", "-c"]
        args:
        - |
          git clone https://github.com/jayzaa/jay-disk /mnt/storage &&
          cp -r /mnt/storage/full/disk/* /mnt/data
        volumeMounts:
        - name: app-storage-volume
          mountPath: /mnt/data
      restartPolicy: OnFailure
      volumes:
      - name: app-storage-volume
        persistentVolumeClaim:
          claimName: app-storage-pvc

# Nginx ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    server {
      listen 80;
      server_name localhost;

      location / {
        root   /usr/share/nginx/html;
        index  index.php index.html index.htm;
      }

      location ~ \.php$ {
        root           /usr/share/nginx/html;
        fastcgi_pass   php-service:9001;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;
        include        fastcgi_params;
      }
    }

# PHP ConfigMap for php.ini
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: php-config
data:
  php.ini: |
    [PHP]
    short_open_tag = On

# Nginx Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
      - name: wait-for-storage
        image: busybox
        command: ['sh', '-c', 'while [ ! -d /usr/share/nginx/html ]; do echo "Waiting for storage initialization..."; sleep 5; done']
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app-storage-volume
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app-storage-volume
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: app-storage-volume
        persistentVolumeClaim:
          claimName: app-storage-pvc
      - name: nginx-config-volume
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

# PHP-FPM Deployment and Service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-deployment
  labels:
    app: php
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      initContainers:
      - name: wait-for-storage
        image: busybox
        command: ['sh', '-c', 'while [ ! -d /usr/share/nginx/html ]; do echo "Waiting for storage initialization..."; sleep 5; done']
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app-storage-volume
      containers:
      - name: php
        image: php:8.2-fpm
        ports:
        - containerPort: 9001
        volumeMounts:
        - name: app-storage-volume
          mountPath: /usr/share/nginx/html
        - name: php-config-volume
          mountPath: /usr/local/etc/php/php.ini
          subPath: php.ini
      volumes:
      - name: app-storage-volume
        persistentVolumeClaim:
          claimName: app-storage-pvc
      - name: php-config-volume
        configMap:
          name: php-config
---
apiVersion: v1
kind: Service
metadata:
  name: php-service
spec:
  ports:
  - port: 9001
    targetPort: 9001
  selector:
    app: php
